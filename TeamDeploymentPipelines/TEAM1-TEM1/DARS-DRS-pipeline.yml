trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - 'TeamDeploymentPipelines/DARS-DRS/**'

pool:
  name: ubuntu

variables: 
- name: ServiceConnectionName
  value: IaC-Pipelinetest-SC
- name: DeploymentLocation
  value: 'norwayeast'
- name: subscriptionID
  value: '2638031b-e819-4081-bacf-43f23a07121c'
- name: ResourceGroupName
  value: RG-Management
- name: envCode
  value: 'dev'
- name: location
  value: 'norwayeast'
- name: ownerteam
  value: 'TEAM1'
- name: assetowner
  value: 'mohit sharma'
- name: criticality
  value: 'Low'
- name: projectCode
  value: 'TEM1'
- name: locationCode
  value: 'noe'
- name: classification
  value: 'Public'

- name: purposeShortRGNet
  value: 'Network'
- name: detailedPurposeRGNet
  value: 'resource group created to host network resources'
- name: purposeShortRGSec
  value: 'Security'
- name: detailedPurposeRGSec
  value: 'resource group created to host security resources'


- name: RGFilePath
  value: TeamDeploymentPipelines/DARS-DRS/DARS-DRS-ResourceGroups.bicep
- name: ResourcesFilePath
  value: TeamDeploymentPipelines/DARS-DRS/DARS-DRS-OtherResources.bicep

- name: detailedPurposeNSG
  value: 'NSG created for testing the templates'
- name: sequenceNSG
  value: 015
- name: detailedPurposeVNET
  value: 'VNET created for testing the templates'
- name: sequenceVNET
  value: 015
- name: vnetAddressPrefix
  value: '192.168.0.0/16'
- name: sequenceSVNET
  value: 001
- name: subnetPrefix
  value: '192.168.0.0/24'


jobs:
- job:
  steps:

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '3.1.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet



  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      azureResourceManagerConnection: $(ServiceConnectionName)
      subscriptionId: $(SubscriptionId)
      resourceGroupName: $(ResourceGroupName)
      location: $(DeploymentLocation)
      templateLocation: 'Linked artifact'
      csmFile: $(RGFilePath)
      overrideParameters: '-envCode "$(envCode)" -location "$(location)" -ownerteam "$(ownerteam)" -assetowner "$(assetowner)" -criticality "$(criticality)" -projectCode "$(projectCode)" -classification "$(classification)" -purposeShortRGNet "$(purposeShortRGNet)" -detailedPurposeRGNet "$(detailedPurposeRGNet)" -purposeShortRGSec "$(purposeShortRGSec)" -detailedPurposeRGSec "$(detailedPurposeRGSec)" -SubscriptionID "$(SubscriptionId)"'
      deploymentMode: 'Incremental'
      deploymentName: 'Deploy_new_ResourceGroup'
      deploymentOutputs: 'deploymentOutputs'


  - bash: |
      echo $(deploymentOutputs)

  - bash: |
      echo "##vso[task.setvariable variable=ScopeRGSec]$(echo $DEPLOYMENT_OUTPUTS | jq -r '.scopeRGSec.value')"
      echo "##vso[task.setvariable variable=ScopeRGNet]$(echo $DEPLOYMENT_OUTPUTS | jq -r '.scopeRGNet.value')"
      
    name: SaveDeploymentOutputs
    displayName: Save deployment outputs into variables
    env:
      DEPLOYMENT_OUTPUTS: $(deploymentOutputs)
    
  - bash: |
      echo $(DEPLOYMENT_OUTPUTS)

  - bash: |
      echo $(ScopeRGSec)
      echo $(ScopeRGNet)

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: $(ServiceConnectionName)
      subscriptionId: $(SubscriptionId)
      action: 'Create Or Update Resource Group'
      resourceGroupName: $(ResourceGroupName)
      location: $(DeploymentLocation)
      csmFile: $(ResourcesFilePath)
      deploymentMode: 'Incremental'
      deploymentName: 'Deploy_resource_to_ResourceGroup'
      overrideParameters: 
        '-envCode "$(envCode)" 
        -location "$(location)" 
        -ownerteam "$(ownerteam)" 
        -assetowner "$(assetowner)" 
        -criticality "$(criticality)" 
        -projectCode "$(projectCode)" 
        -locationCode "$(locationCode)" 
        -classification "$(classification)" 
        -detailedPurposeNSG "$(detailedPurposeNSG)" 
        -sequenceNSG "$(sequenceNSG)" 
        -detailedPurposeVNET "$(detailedPurposeVNET)" 
        -sequenceVNET "$(sequenceVNET)" 
        -sequenceSVNET "$(sequenceSVNET)" 
        -SubscriptionID "$(SubscriptionId)"  
        -ScopeResourceGroupName1 "$(ScopeRGSec)"  
        -ScopeResourceGroupName2 "$(ScopeRGNet)" 
        -vnetAddressPrefix "$(vnetAddressPrefix)" 
        -subnetPrefix "$(subnetPrefix)"'
